---

# bdr_nodes isn't synced properly on 0.7.x so we've got to do that
# ourselves, copying from each node to each other node.
#
# BDR must be fully up for this part.

- name: update our node name
  shell: "{{postgres_install_dir}}/bin/psql -qAtw '{{bdr_node_dsn}}' -c \"UPDATE bdr.bdr_nodes SET node_name = '{{inventory_hostname}}' WHERE node_sysid = '{{bdr_node_sysid}}'\""


- name: copy our bdr_nodes entry to the other peers
  shell: "{{postgres_install_dir}}/bin/psql -qAtw '{{bdr_node_dsn}}' -c \"\\copy (SELECT * FROM bdr.bdr_nodes WHERE node_sysid = '{{bdr_node_sysid}}') TO stdout\" | {{postgres_install_dir}}/bin/psql -qAtw '{{hostvars[item]['bdr_node_dsn']}}' -c '\\copy bdr.bdr_nodes FROM stdin'"
  with_items: "{{ groups[bdrgroupname] }}"
  when: item != inventory_hostname
  register: command_result
  failed_when: command_result.rc > 1

- name: wait for sync
  shell: "{{postgres_install_dir}}/bin/psql -qAtw '{{bdr_node_dsn}}' -c \"SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), 0);\""

- name: make sure all nodes got copied
  shell: "{{postgres_install_dir}}/bin/psql -qAtw '{{bdr_node_dsn}}' -c 'SELECT count(*) FROM bdr.bdr_nodes'"
  register: command_result
  failed_when: command_result.rc != 0 or command_result.stdout_lines[0]|trim|int != groups[bdrgroupname]|length

- name: generate bdr.bdr_connections
  shell: "{{postgres_install_dir}}/bin/psql -qAtw '{{bdr_node_dsn}}' -c \"insert into bdr.bdr_connections(conn_sysid, conn_timeline, conn_dboid, conn_origin_sysid, conn_origin_timeline, conn_origin_dboid, conn_is_unidirectional, conn_dsn) SELECT node_sysid, node_timeline, node_dboid, node_sysid, node_timeline, node_dboid, 'f', 'dsn' FROM bdr.bdr_nodes WHERE node_sysid = '{{bdr_node_sysid}}'\""

- name: wait for sync
  shell: "{{postgres_install_dir}}/bin/psql -qAtw '{{bdr_node_dsn}}' -c \"SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), 0);\""
