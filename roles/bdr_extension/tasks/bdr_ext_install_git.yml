---
- name: clone or update BDR extension git
  git: repo="{{bdr_ext_git_url}}" dest="{{bdr_ext_git_checkout_dir}}"
       version="{{bdr_ext_git_ref}}"
       reference="{{bdr_ext_git_reference_repo}}"
  when: bdr_ext_git_install

- name: make build directory
  file: state=directory path="{{bdr_ext_git_builddir}}"
  when: bdr_ext_git_install

- name: configure BDR extension
  shell: "{{bdr_ext_git_checkout_dir}}/configure PG_CONFIG={{bdr_ext_pg_config}} {% for arg in bdr_ext_git_extra_configure_opts %}{{arg|quote}} {% endfor %}"
  args:
    chdir: "{{bdr_ext_git_builddir}}"
  environment: bdr_ext_git_extra_configure_env
  when: bdr_ext_git_install

- name: make clean
  shell: "{{bdr_ext_git_make_command}} clean"
  args:
    chdir: "{{bdr_ext_git_builddir}}"
  when: "{{bdr_ext_git_makeclean|bool and bdr_ext_git_install}}"

- name: make BDR extension
  shell: "{{bdr_ext_git_make_command}} {{item}}"
  args:
    chdir: "{{bdr_ext_git_builddir}}"
  with_items: bdr_ext_git_make_targets
  when: bdr_ext_git_install

- name: install BDR extension
  shell: "{{bdr_ext_git_make_command}} {{item}}"
  args:
    chdir: "{{bdr_ext_git_builddir}}"
  with_items: bdr_ext_git_make_install_targets
  when: bdr_ext_git_install

- name: get BDR_VERSION
  shell: "awk '/ BDR_VERSION / { printf($3) }' {{bdr_ext_git_checkout_dir}}/bdr_version.h.in"
  register: bdr_version_str

- name: get BDR_VERSION_NUM
  shell: "awk '/ BDR_VERSION_NUM / { printf($3) }' {{bdr_ext_git_checkout_dir}}/bdr_version.h.in"
  register: bdr_version_num

- name: export extension version
  set_fact:
    bdr_version_str: bdr_version_str.stdout|replace("\"","")
    bdr_version_num: bdr_version_num.stdout
