---

# TODO: get hostname from facts or config
# TODO: replication sets
# TODO: apply delay
# TODO: Local DSN

- name: Template pre-BDR-create SQL script
  template:  src="{{bdr_pre_create_sql_template}}" dest="{{postgres_install_dir}}/bdr_pre_create.sql"

- name: Execute pre-BDR-create SQL script
  shell: "{{postgres_install_dir}}/bin/psql -p {{postgres_port}} -U {{postgres_superuser}} {{bdr_node_database}} -qAtw -f {{postgres_install_dir}}/bdr_pre_create.sql"
  notify: Before BDR group create

- name: Delete pre-BDR-create SQL script
  file: path="{{postgres_install_dir}}/bdr_pre_create.sql" state=absent

- name: bdr_group_create
  shell: "{{postgres_install_dir}}/bin/psql -p {{postgres_port}} -U {{postgres_superuser}} {{bdr_node_database}} -qAtw -c \"SELECT bdr.bdr_group_create(local_node_name := '{{inventory_hostname}}', node_external_dsn := 'port={{postgres_port}} user={{postgres_superuser}} dbname={{bdr_node_database}}');\""
  when: inventory_hostname == groups['bdrnodes'][0]

- name: Template post-BDR-create SQL script
  template:  src="{{bdr_post_create_sql_template}}" dest="{{postgres_install_dir}}/bdr_post_create.sql"

- name: Execute post-BDR-create SQL script
  shell: "{{postgres_install_dir}}/bin/psql -p {{postgres_port}} -U {{postgres_superuser}} {{bdr_node_database}} -qAtw -f {{postgres_install_dir}}/bdr_post_create.sql"
  notify: Before BDR group create

- name: Delete post-BDR-create SQL script
  file: path="{{postgres_install_dir}}/bdr_post_create.sql" state=absent
